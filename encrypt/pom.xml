<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.meizu</groupId>
    <artifactId>simplify-framework</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>encrypt</artifactId>
  <packaging>jar</packaging>
  <name>加密模块</name>
  <description>封装相关加密算法及表字段加密，自定义加密，通讯加密，防篡改，签名算法</description>
  <url>http://maven.apache.org</url>

  <dependencies>
	<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
  </dependencies>
   <build>
		<finalName>meizu-encrypt</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
				<source>1.8</source>
				<target>1.8</target>
				</configuration>
			</plugin>
			<!-- mvn source:jar -->
			<!-- 使用持续构建工具，在linux平台下打包，可以解决这个问题，前提是linux系统的内部编码要设置成utf-8，目前打包虽然不乱码，但是打包后的整个jar文件是gbk的，eclipse等工具会解析整个文件为gbk编码，其实jar包内部存的是utf8编码的文件 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<attach>true</attach>
					<!-- <encoding>utf-8</encoding> --><!-- 未测试 -->
					<argLine>-Dfile.encoding=UTF-8</argLine> 
				</configuration>
				<executions>
					<execution>
						<!-- 编译阶段打包源文件 -->
						<id>attach-sources</id>
						<!-- <phase>package</phase> -->
						<!-- <phase>verify</phase> -->
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
							<!-- <goal>jar-no-fork</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
