<!-- <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
 	http://maven.apache.org/xsd/settings-1.0.0.xsd"> -->
<settings xmlns="http://maven.apache.org/SETTINGS/1.1.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0
	settings-1.1.0.xsd">
 	<!-- 需要拷贝到.m2目录下 -->
 	<!-- 多项目隔离仓库方式，避免冲突,尽量少用 -->
 	<!-- <localRepository>c:/mavenRepo/${env.GERRIT_BRANCH}-${env.GERRIT_TOPIC}</localRepository> -->
	<localRepository>c:/mavenRepo</localRepository> 
	<!--      <interactiveMode /> 
	     <usePluginRegistry /> 
	     <offline/> 
	     <pluginGroups /> 
	-->
	<servers>
		<server>
			<id>nexus-docker-auth</id>
			<username>admin</username>
			<password>admin123</password>
			<configuration>
		      <email>luchuangye@meizu.com</email>
		    </configuration>
		</server>
		<server>
			<id>nexus-snapshots</id>
			<username>admin</username>
			<password>admin123</password>
		</server>
		<server>
			<id>nexus-releases</id>
			<username>admin</username>
			<password>admin123</password>
			<!-- <privateKey>${user.home}/.ssh/id_dsa</privateKey>
		    <passphrase>slei23llsljdlsdf</passphrase>
		    <filePermissions>664</filePermissions>
		    <directoryPermissions>775</directoryPermissions>
		    <configuration>
		    	<sshExecutable>plink</sshExecutable>
	        	<scpExecutable>pscp</scpExecutable>
	        	<sshArgs>other arguments you may need</sshArgs>
	        </configuration> -->
		</server>
	    <server>
	        <id>simplify-doc</id>
	        <username>root</username>
	        <password>mzros123</password>
	        <!-- <privateKey>${user.home}/.ssh/id_dsa</privateKey>
		    <passphrase>some_passphrase</passphrase>
		    <filePermissions>664</filePermissions>
		    <directoryPermissions>775</directoryPermissions>
		    <configuration>
		    	<sshExecutable>plink</sshExecutable>
	        	<scpExecutable>pscp</scpExecutable>
	        	<sshArgs>other arguments you may need</sshArgs>
	        </configuration> -->
	    </server>
	</servers>
	<!-- 注意：mirrors和repositories配置不当，或导致部分artifact找不到，比如框架的vip.simplfiy:simplify-framework:pom:1.2.3-SNAPSHOT找不到 -->
	<!-- 注意：mirrorOf的值为central只包含而不包含snapshots仓库，这里一般配置*就可以了,这样包含了snapshots仓库 -->
	<!-- mirrors设置比repository简单，建议使用 -->
	<mirrors>
		<mirror>
			<id>nexus</id>
			<name>nexus</name>
			<url>http://10.2.67.20:8081/nexus/content/groups/public/</url>
			<!-- <mirrorOf>central</mirrorOf> -->
			<mirrorOf>*</mirrorOf>
		</mirror>
	</mirrors>
	<profiles>
		<profile>
			<!-- <activation>
				<activeByDefault>true</activeByDefault>
				<jdk>1.8</jdk>
			</activation> -->
			<id>dev</id>
			<!-- <properties><settings></settings></properties> -->
			<!-- 1.这里可以配置非maven官方的仓库 。2.主要针对开发中的snapshots的特殊指定-->
			<!-- 以下repositories 的所有内容可拷贝到具体项目的pom文件中，针对项目起作用 -->
			<!-- repositories 无论是全局的或是某个项目pom中指定的，都会覆盖掉全局mirror的配置 -->
			<!-- repository 和 mirror的区别是： mirror会映射到一个远程仓库服务器，可以包含多个仓库，配置比repository简单，没有详细的设置-->
			<repositories>
				<repository>
					<id>nexus</id>
	  				<name>internal nexus repository</name>
	  				<!-- 这里使用了具体可以更新snapshots的仓库，而下面注释的地址包含的其他第三方可能存在的snapshot的模块不被纳入
	  				因为配置了repositorys会覆盖掉mirror的配置，所以仓库地址必须配全 -->
	  				<!-- <url>http://10.2.81.208:8081/nexus/content/repositories/snapshots/</url> -->
	  				<!-- 建议开启使用以下地址 -->
	  				<url>http://10.2.81.208:8081/nexus/content/groups/public</url>
					<snapshots>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>nexus</id>
			  		<name>internal nexus repository</name>
			  		<url>http://10.2.81.208:8081/nexus/content/groups/public</url>
					<snapshots>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>
	</profiles> 
<!-- <proxies /> -->
	<!-- 默认激活的profile，这样对所有项目起作用了，是全局的,如果这里不指定，默认dev环境不生效，需要在在ide中指定，目前eclipse只能通过命令行指定，idea有很好的控制 -->
	<!-- <activeProfiles>
		<activeProfile>dev</activeProfile>
	</activeProfiles> -->
</settings>