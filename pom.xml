<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.meizu</groupId>
  <artifactId>simplify-framework</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>精简程序框架</name>
  <description>精简的程序框架，可以用于简化web和服务端程序的开发</description>
  <url>http://simplify.ros.meizu.com</url>
  <!-- 项目工程管理 start -->
	<inceptionYear>2016</inceptionYear>
  	<organization>
		<name>meizu inc.</name>
		<url>http://www.meizu.com/</url>
	</organization>
	<!-- 问题跟踪 -->
	<issueManagement>
		<system>Jira</system>
		<url>http://10.2.67.31:8083/jira/browse/ros</url>
	</issueManagement>
  	<!-- 版本控制 -->
	<scm>
		<url>http://10.2.67.20/svn/rosTeam/rosgap/source/trunk/simplify</url>
		<connection>scm:svn:http://10.2.67.20/svn/rosTeam/rosgap/source/trunk/simplify</connection>
		<developerConnection>scm:svn:http://10.2.67.20/svn/rosTeam/rosgap/source/trunk/simplify</developerConnection>
	</scm>
	<!-- 持续集成 -->
	<ciManagement>
		<system>Jenkins</system>
		<url>http://10.2.67.31:8082/</url>
	</ciManagement>
  	<mailingLists>
    	<mailingList>
      		<name>开发人员列表</name>
	  		<subscribe>mailto:users-subscribe@meizu.com</subscribe>
    	</mailingList>
  	</mailingLists>
  <!-- 开发成员列表 -->
  <developers>
		<developer>
			<id>lcy</id>
			<name>lcy</name>
			<email>luchuangye@meizu.com</email>
			<timezone>8</timezone>
		</developer>
		<developer>
			<id>wlz</id>
			<name>wlz</name>
			<email>wanglizong@meizu.com</email>
			<timezone>8</timezone>
		</developer>
	</developers>
	<!-- 项目授权 -->
	<licenses>
		<license>
			<name>Apache License,Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	<!-- 项目工程管理  end-->
  <modules>
    <module>stress-tester</module>
  	<module>utils</module>
  	<module>weaving</module>
  	<module>encrypt</module>
  	<module>ioc</module>
  	<module>aop</module>
  	<module>dao</module>
  	<module>caches</module>
  	<module>webcache</module>
  	<module>mvc</module>
  	<module>cache-redis</module>
  	<module>mongodb</module>
    <module>message</module>
    <module>rpc</module>
    <module>authfilter</module>
  </modules>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <templatePath>${basedir}</templatePath>
    <parentsite>parent</parentsite>
    <mongo-java-driver>3.1.0</mongo-java-driver>
    <slf4j-api.version>1.7.13</slf4j-api.version>
	<log4j.version>1.2.9</log4j.version>
  </properties>
  <distributionManagement>
		<snapshotRepository>
            <id>nexus-snapshots</id>
            <name>User Porject Snapshot</name>
            <url>http://10.2.67.20:8081/nexus/content/repositories/snapshots/</url>
            <uniqueVersion>true</uniqueVersion>
        </snapshotRepository>
        <repository>
            <id>nexus-release</id>
            <name>User Porject Release</name>
            <url>http://10.2.67.20:8081/nexus/content/repositories/releases/</url>
        </repository>
		<site>
			<id>tt</id>
			<name>aaa</name>
			<url>file://D:/site</url>
		</site>
	</distributionManagement>
	<repositories>
	  	<!-- 仓库地址，从上往下进行查找。 -->
	
		<!-- 如有私服,打开私服地址-->
		<repository>
			<id>nexus</id>
	  		<name>internal nexus repository</name>
	  		<url>http://10.2.67.20:8081/nexus/content/groups/public</url>
		</repository>
		
		<!-- <repository>
            <id>oschina</id>
            <name>Oschina Releases</name>
            <url>http://maven.oschina.net/content/groups/public</url>
        </repository> -->
        
		<!-- <repository> 
			<id>simpleify</id> 
			<name>simpleify beta</name>
			<url>https://raw.github.com/simpleify/repository/master</url>
		</repository> -->
		
	</repositories>
	
	<pluginRepositories> 
	
		<!-- 如有私服,打开私服地址-->
		<pluginRepository>
			<id>nexus</id>
	  		<name>internal nexus repository</name>
	  		<url>http://10.2.67.20:8081/nexus/content/groups/public</url>
		</pluginRepository>
		
		<!-- <pluginRepository>
            <id>oschina</id>
            <name>Oschina Releases</name>
            <url>http://maven.oschina.net/content/groups/public</url>
        </pluginRepository> -->
		
	</pluginRepositories> 
	
  <dependencies>
		<!-- 日志相关 begin -->
		<!-- slf4j启用彩色日志jansi -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.13</version>
		</dependency>
		<!-- logback日志start -->
		<dependency> 
		    <groupId>ch.qos.logback</groupId> 
		    <artifactId>logback-core</artifactId> 
		    <version>1.1.3</version> 
		</dependency> 
		<dependency> 
		    <groupId>ch.qos.logback</groupId> 
		    <artifactId>logback-classic</artifactId> 
		    <version>1.1.3</version> 
		</dependency> 
		<!-- logback日志end -->
		
		
		<!-- 日志相关 end -->
	    <!-- 测试相关start -->
	    <!-- 单元测试 -->
  		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		
		<!-- 测试相关end -->
		<!-- <dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jaxrs</artifactId>
			<version>1.5.8</version>
		</dependency> -->
  </dependencies>
  <build>
  	<defaultGoal>pdf:pdf</defaultGoal>
    <plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
			<source>1.8</source>
			<target>1.8</target>
			</configuration>
		</plugin>
		<!-- 解决maven test命令时console出现中文乱码乱码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<!-- forkMode 可设置值有 “never”， “once”， “always” 和 “pertest” -->
					<!-- pretest： 每一个测试创建一个新进程，为每个测试创建新的JVM是单独测试的最彻底方式，但也是最慢的，不适合hudson上持续回归
						 once：在一个进程中进行所有测试。once为默认设置，在Hudson上持续回归时建议使用默认设置。
						 always：在一个进程中并行的运行脚本，Junit4.7以上版本才可以使用，surefire的版本要在2.6以上提供这个功能，其中 threadCount：执行时，指定可分配的线程数量。只和参数parallel配合使用有效。默认：5 -->
					<forkMode>always</forkMode>
					<parallel>methods</parallel>
					<threadCount>4</threadCount>
					<!-- <argLine>-Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m</argLine> -->
 					<argLine>-Dfile.encoding=UTF-8</argLine> 
 					<excludes>  
	                  <exclude>**/TestAll.java</exclude>  
	                </excludes> 
 					<!-- cobertura统计单元测试覆盖率 -->
					<!-- <systemProperties>
						<property>
							<name>net.sourceforge.cobertura.datafile</name>
							<value>target/cobertura/cobertura.ser</value>
						</property>
					</systemProperties> -->
				</configuration>
			</plugin>
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-pdf-plugin</artifactId>
	          <version>1.3</version>
			  <executions>
			    <execution>
			      <id>pdf</id>
			      <phase>site</phase>
			      <goals>
			        <goal>pdf</goal>
			      </goals>
			      <configuration>
			      	<aggregate>true</aggregate>
			      	<locales>zh_CN</locales>
			        <!-- <outputDirectory>${project.reporting.outputDirectory}</outputDirectory> -->
			        <includeReports>true</includeReports>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>
			<!-- site插件：site:stage 用于生成所有模块的site，site:run 用于生成和运行site，用于查看文档 ,后续增加site插件的详细配置-->
			<!--文档创建： archetype:create -DgroupId=com.meizu.ros -DartifactId=ros-app -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-site -->
			<!-- maven的site文档生成，使用的是Doxia来处理和解析文档的 -->
			<!-- clean site site:stage -DstagingDirectory=file://D:/site #可以指定生成的路径 -->
			<!-- 生成过慢的结果方法  clean site site:stage -Ddependency.locations.enabled=false-->
			<plugin>  
                <!-- 站点生成插件 -->  
                <groupId>org.apache.maven.plugins</groupId>  
                <artifactId>maven-site-plugin</artifactId>  
                <version>3.5</version>  
                <configuration>  
                    <!-- 支持国际化 -->  
                    <locales>zh_CN</locales>
                    <templateFile>${templatePath}/src/site/${parentsite}site.vm</templateFile>
                    <!-- <inputDirectory>${templatePath}/src/site/resources</inputDirectory> -->
                    <reportPlugins>
						<plugin>
							<!-- 源码查看生成 -->
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.5</version>
							<configuration>
								<!-- 多模块聚合 -->
								<aggregate>true</aggregate>
							</configuration>
					        <reportSets>
					          <reportSet>
					            <id>aggregate</id>
					            <!-- <inherited>false</inherited> -->
					            <reports>
					              <report>aggregate</report>
					            </reports>
					          </reportSet>
					        </reportSets>
					      </plugin>
					      <!-- 项目信息过滤-index一定要生成,否则链接问题 -->
						   <plugin>          
							    <groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-project-info-reports-plugin</artifactId>
								<version>2.9</version>   
								<configuration>
									<aggregate>true</aggregate>
									<customBundle>${templatePath}/src/site/custom/project-info-reports.properties</customBundle>
								</configuration>    
							    <reportSets>           
								   <reportSet>          
									   <reports>   
											<report>index</report>
											<report>dependencies</report>
											<report>dependency-convergence</report>
											<report>dependency-info</report>
											<report>dependency-management</report>
											<report>distribution-management</report>
											<report>project-team</report>
											<report>issue-tracking</report>
											<report>license</report>
											<report>scm</report>
										    <report>mailing-list</report>               
											<report>cim</report>
											<report>modules</report>
											<report>plugin-management</report>
											<report>plugins</report>
											<report>help</report>
											<report>summary</report>         
									   </reports>           
								   </reportSet>         
							   </reportSets>
						   </plugin>
						   <!-- 设置以下环境变量 -->
						   <!-- JAVA_TOOL_OPTIONS   
						   -Dfile.encoding=UTF-8 -->
						   <plugin>                             
						   		<groupId>org.apache.maven.plugins</groupId>                            
						   		<artifactId>maven-javadoc-plugin</artifactId>                            
						   		<version>2.10.3</version>                            
						   		<configuration>  
						   			<!-- <failOnError>false</failOnError> -->     
						   		    <additionalJOption>-J-Dfile.encoding=UTF-8</additionalJOption>
						   		    <additionalparam>-Xdoclint:none</additionalparam><!-- java1.8 特有功能 -->
						   			<!-- <aggregate>true</aggregate> -->                          
						   			<charset>UTF-8</charset>           
						   			<!-- <stylesheetfile>${templatePath}/src/site/stylesheet.css</stylesheetfile>   -->                        
						   			<encoding>UTF-8</encoding>                                        
						   			<docencoding>UTF-8</docencoding>    
						   			<tags>  
							            <tag>  
							                <name>title</name>  
							                <placement>title</placement>  
							                <head>标题</head>  
							            </tag>  
							        </tags>                        
						   		</configuration>        
						   		<!-- <executions>
							     <execution>
							      <id>attach-javadocs</id>
							      <goals>
							       <goal>jar</goal>
							      </goals>
							     </execution>
							    </executions>   -->      
						   	</plugin>
					</reportPlugins>
                </configuration>
            </plugin>
    </plugins>
    <resources>
		<resource>
			<directory>src/main/resources</directory>
			<includes>
				<include>**/*.xml</include>
				<include>**/*.properties</include>
			</includes>
			<filtering>true</filtering>
		</resource>
		<resource>
			<directory>src/main/java</directory>
			<includes>
				<include>**/*.xml</include>
				<include>**/*.properties</include>
			</includes>
			<filtering>true</filtering>
		</resource>
	</resources>
    
  </build>
  
	<!-- <reporting>      
		<plugins> -->
           <!-- <plugin> 
               <groupId>org.codehaus.mojo</groupId>                                      
               <artifactId>dashboard-maven-plugin</artifactId>                                      
               <version>1.0.0-beta-1</version>                             
           </plugin> -->
	   <!-- </plugins>    
   </reporting> -->
</project>